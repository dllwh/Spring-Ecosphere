<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.dllwh</groupId>
	<artifactId>dllwh-SpringBoot2</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- ====================================================================== 
		项目开发者列表 -->
	<developers>
		<!--某个项目开发者的信息 -->
		<developer>
			<!--SCM里项目开发者的唯一标识符 -->
			<id>duleilewuhen</id>
			<!--项目开发者的全名 -->
			<name>独泪了无痕</name>
			<!--项目开发者的email -->
			<email>duleilewuhen@sina.com</email>
			<!--项目开发者在项目中扮演的角色，角色元素描述了各种角色 -->
			<roles>
				<role>Project Manager</role>
				<role>Architect</role>
			</roles>
		</developer>
		<developer>
			<id>GXF5211314</id>
			<name>皇族灬战狼</name>
			<email>duleilewuhen@163.com</email>
			<roles>
				<role>java developer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<!-- 使用UTF-8编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- 使用jdk1.8版本 -->
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
		<swagger.version>2.9.2</swagger.version>
		<hutool.version>5.0.0</hutool.version>
	</properties>

	<!-- 声明项目的父项目 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<modules>
		<module>SpringBoot2-chapter01</module>
		<module>SpringBoot2-chapter02</module>
		<module>SpringBoot2-chapter03-redis</module>
		<module>SpringBoot2-chapter03-rediscluster</module>
		<module>SpringBoot2-chapter04-mongo</module>
		<module>SpringBoot2-chapter05-websocket</module>
		<module>SpringBoot2-chapter06-security</module>
		<module>SpringBoot2-chapter07-social</module>
		<module>SpringBoot2-chapter08-amqp</module>
		<module>SpringBoot2-chapter08-jms</module>
		<module>SpringBoot2-chapter09-mobile</module>
		<module>SpringBoot2-chapter10-webservices</module>
		<module>SpringBoot2-chapter11-apacheSolr</module>
		<module>SpringBoot2-chapter12-actuator</module>
		<module>SpringBoot2-chapter13-session</module>
		<module>SpringBoot2-chapter14-shiro</module>
		<module>SpringBoot2-chapter15-task</module>
		<module>SpringBoot2-chapter16-vue</module>
		<module>SpringBoot2-chapter17-cache</module>
		<module>SpringBoot2-chapter18-springDataJPA</module>
		<module>SpringBoot2-chapter19-swagger2</module>
		<module>SpringBoot2-chapter20-freeMarker</module>
		<module>SpringBoot2-chapter20-thymeleaf</module>
		<module>SpringBoot2-chapter21-mybatisPlus</module>
		<module>SpringBoot2-chapter22-mybatis</module>
		<module>SpringBoot2-chapter23-Aop</module>
		<module>SpringBoot2-chapter24-adminServer</module>
		<module>SpringBoot2-chapter24-adminClient</module>
	</modules>

	<dependencies>

		<!-- SpringBoot依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- SpringBoot devtools热部署配置 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Spring 单元测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- 后台的参数校验 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- 引入lombok 依赖 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- 大多数的web应用都使用spring-boot-starter-web模块进行快速搭建和运行。 -->
		<!-- spring-boot-starter-web -->
		<!-- 对全栈web开发的支持， 包括tomCat和 spring-webMVC -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- 引入 Swagger2依赖 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<!-- 引入模板thymeleaf依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- 引入 org.apache 相关依赖 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>
		<!--io常用工具类 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<!--文件上传工具类 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.3</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-io</artifactId>
					<groupId>commons-io</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 阿里巴巴fastjson，解析json视图 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.83</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<!-- 引入 Joda-Time 依赖 -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10.1</version>
		</dependency>

		<!-- 在 META-INF/additional-spring-configuration-metadata.json 中配置 可以去除 
			application.yml 中自定义配置的红线警告，并且为自定义配置添加 hint 提醒 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- hutool工具类 -->
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${hutool.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
			</plugin>
			<!-- 制定项目的JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerVersion>${java.version}</compilerVersion>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- maven的plugins报错解决方法 -->
	<profiles>
		<profile>
			<id>jdk-${java.version}</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<jdk>${java.version}</jdk>
			</activation>
			<properties>
				<maven.compiler.source>${java.version}</maven.compiler.source>
				<maven.compiler.target>${java.version}</maven.compiler.target>
				<maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
			</properties>
		</profile>
	</profiles>

</project>